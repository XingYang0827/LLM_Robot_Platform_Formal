------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the action requirement. Remember to write a Python code and comment out words other than the generated Python code.


### User Instruction:
{Write Python code to move the robot 2 meters.}

### Library of functions: 
{
	drive_distance(float32 distance, float32 max_translation_speed)
	rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each function appears in Library of functions
{
	drive_distance(float32 distance, float32 max_translation_speed): 
		{
			action: The robot will drive distance specified by the first argument in the speed specified by the second argument
			argument explanation: 
				1st argument: no restriction
				2nd argument: ranges from 1 to 10
		}
	rotate_angle(float32 angle, float32 max_rotation_speed): 
		{
			action: The robot will rotate in radian specified by the first argument with the rotation speed specified by the second argument
			argument explanation: 
				1st argument: Unit is radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
				2nd argument: Ranges from 1 to 10.
		}
}


### Python code generated by AI:
{
	drive\_distance(2.0, 5.0)
	rotate\_angle(0.5, 3.0)
}

### Expected output:
{
	"action": "The robot will drive 2 meters with a speed of 5 and rotate 0.5 radians with a rotation speed of 3."
}


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the action requirement. Remember to write a Python code and comment out words other than the generated Python code.


### User Instruction:
{Write Python code to move the robot 2 meters.}

### Library of functions: 
{
	drive_distance(float32 distance, float32 max_translation_speed)
	rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each function appears in Library of functions
{
	drive_distance(float32 distance, float32 max_translation_speed): 
		{
			action: The robot will drive distance specified by the first argument in the speed specified by the second argument
			argument explanation: 
				1st argument: no restriction
				2nd argument: ranges from 1 to 10
		}
	rotate_angle(float32 angle, float32 max_rotation_speed): 
		{
			action: The robot will rotate in radian specified by the first argument with the rotation speed specified by the second argument
			argument explanation: 
				1st argument: Unit is radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
				2nd argument: Ranges from 1 to 10.
		}
}


### Python code generated by AI:
{
	drive\_distance(2.0, 5.0)
	rotate\_angle(0.5, 3.0)
}

### Expected output:
{
	"action": "The robot will drive 2 meters with a speed of 5 and rotate 0.5 radians with a rotation speed of 3."
}


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the action requirement. Remember to write a Python code and comment out words other than the generated Python code.


### User Instruction:
{Write Python code to move the robot 2 meters.}

### Library of functions: 
{
	drive_distance(float32 distance, float32 max_translation_speed)
	rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each function appears in Library of functions
{
	drive_distance(float32 distance, float32 max_translation_speed): 
		{
			action: The robot will drive distance specified by the first argument in the speed specified by the second argument
			argument explanation: 
				1st argument: no restriction
				2nd argument: ranges from 1 to 10
		}
	rotate_angle(float32 angle, float32 max_rotation_speed): 
		{
			action: The robot will rotate in radian specified by the first argument with the rotation speed specified by the second argument
			argument explanation: 
				1st argument: Unit is radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
				2nd argument: Ranges from 1 to 10.
		}
}


### Python code generated by AI:
{
	drive\_distance(2.0, 5.0)
	rotate\_angle(0.5, 3.0)
}

### Expected output:
{
	"action": "The robot will drive 2 meters with a speed of 5 and rotate 0.5 radians with a rotation speed of 3."
}


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the action requirement. Remember to write a Python code and comment out words other than the generated Python code.


### User Instruction:
{Write Python code to move the robot 2 meters forward.}

### Library of functions: 
{
	drive_distance(float32 distance, float32 max_translation_speed)
	rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each function appears in Library of functions
{
	drive_distance(float32 distance, float32 max_translation_speed): 
		{
			action: The robot will drive distance specified by the first argument in the speed specified by the second argument
			argument explanation: 
				1st argument: no restriction
				2nd argument: ranges from 1 to 10
		}
	rotate_angle(float32 angle, float32 max_rotation_speed): 
		{
			action: The robot will rotate in radian specified by the first argument with the rotation speed specified by the second argument
			argument explanation: 
				1st argument: Unit is radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
				2nd argument: Ranges from 1 to 10.
		}
}


### Python code generated by AI:
{
	drive\_distance(2.0, 5.0)
	rotate\_angle(0.5, 3.0)
}

### Expected output:
{
	"status": "success",
	"message": "Robot moved 2 meters forward and rotated 0.5 radians clockwise."
}


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the action requirement. Remember to write a Python code and comment out words other than the generated Python code.


### User Instruction:
{Write Python code to make the robot move 2 meters in straight line.}

### Library of functions: 
{
	drive_distance(float32 distance, float32 max_translation_speed)
	rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each function appears in Library of functions
{
	drive_distance(float32 distance, float32 max_translation_speed): 
		{
			action: The robot will drive distance specified by the first argument in the speed specified by the second argument
			argument explanation: 
				1st argument: no restriction
				2nd argument: ranges from 1 to 10
		}
	rotate_angle(float32 angle, float32 max_rotation_speed): 
		{
			action: The robot will rotate in radian specified by the first argument with the rotation speed specified by the second argument
			argument explanation: 
				1st argument: Unit is radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
				2nd argument: Ranges from 1 to 10.
		}
}


### Python code generated by AI:
{
	drive\_distance(2.0, 5.0)
	rotate\_angle(0.0, 1.0)
}


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the action requirement. Remember to write a Python code and comment out words other than the generated Python code.


### User Instruction:
{Write Python code to make the robot move 2 meters in straight line.}

### Library of APIs: 
{
	drive_distance(float32 distance, float32 max_translation_speed)
	rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each function appears in Library of functions
{
	drive_distance(float32 distance, float32 max_translation_speed): 
		{
			action: The robot will drive distance specified by the first argument in the speed specified by the second argument
			argument explanation: 
				1st argument: no restriction
				2nd argument: ranges from 1 to 10
		}
	rotate_angle(float32 angle, float32 max_rotation_speed): 
		{
			action: The robot will rotate in radian specified by the first argument with the rotation speed specified by the second argument
			argument explanation: 
				1st argument: Unit is radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
				2nd argument: Ranges from 1 to 10.
		}
}


### Python code generated by AI:
{
	drive\_distance(2.0, 5.0)
	rotate\_angle(0.0, 5.0)
}

### Expected Output:
{
	The robot will move 2 meters in straight line with the rotation speed of 5 radians per second.
}


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the action requirement. Remember to write a Python code and comment out words other than the generated Python code.


### User Instruction:
{Write Python code to make the robot move 2 meters in straight line.}

### Library of APIs: 
{
	drive_distance(float32 distance, float32 max_translation_speed)
	rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each function appears in Library of functions
{
	drive_distance(float32 distance, float32 max_translation_speed): 
		{
			action: The robot will drive distance specified by the first argument in the speed specified by the second argument
			argument explanation: 
				1st argument: Unit is meters. No range restriction
				2nd argument: ranges from 1 to 10
		}
	rotate_angle(float32 angle, float32 max_rotation_speed): 
		{
			action: The robot will rotate in radian specified by the first argument with the rotation speed specified by the second argument
			argument explanation: 
				1st argument: Unit is radians (180 degrees equal to pi radians). If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
				2nd argument: Ranges from 1 to 10.
		}
}


### Python code generated by AI:
{
	drive\_distance(2.0, 5.0)
	rotate\_angle(0.0, 5.0)
}

### Explanation of the generated code:
{
	The code uses the `drive_distance` function to move the robot 2 meters in straight line. The `drive_distance` function takes two arguments: `distance` and `max_translation_speed`. The `distance` argument is set to 2.0, which means the robot will move 2 meters. The `max_translation_speed` argument is set to 5.0, which means the robot will move at the maximum speed allowed.
	The code also uses the `rotate_angle` function to rotate the robot 0.0 radians in straight line. The `rotate_angle` function takes two arguments: `angle` and `max_rotation_speed`. The `angle` argument is set to 0.0, which means the robot will rotate 0.0 radians. The `max_rotation_speed` argument is set to 5.0, which means the robot will rotate at the maximum speed allowed.
}


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the action requirement. Remember to write a Python code and comment out words other than the generated Python code.


### User Instruction:
{Write Python code to make the robot to rotate 18- degrees}

### Library of APIs: 
{
	drive_distance(float32 distance, float32 max_translation_speed)
	rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each function appears in Library of functions
{
	drive_distance(float32 distance, float32 max_translation_speed): 
		{
			action: The robot will drive distance specified by the first argument in the speed specified by the second argument
			argument explanation: 
				1st argument: Unit is meters. No range restriction
				2nd argument: ranges from 1 to 10
		}
	rotate_angle(float32 angle, float32 max_rotation_speed): 
		{
			action: The robot will rotate in radian specified by the first argument with the rotation speed specified by the second argument
			argument explanation: 
				1st argument: Unit is radians (180 degrees equal to pi radians). If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
				2nd argument: Ranges from 1 to 10.
		}
}


### Python code generated by AI:
{
	# Get the distance to be driven
	distance = 1.5
	max\_translation\_speed = 5

	# Get the angle to be rotated
	angle = 1.5
	max\_rotation\_speed = 5

	# Drive the distance
	drive\_distance(distance, max\_translation\_speed)

	# Rotate the angle
	rotate\_angle(angle, max\_rotation\_speed)
}


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the action requirement. Remember to write a Python code and comment out words other than the generated Python code.


### User Instruction:
{Write Python code to make the robot to turn 180 degrees in place}

### Library of APIs: 
{
	drive_distance(float32 distance, float32 max_translation_speed)
	rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each function appears in Library of functions
{
	drive_distance(float32 distance, float32 max_translation_speed): 
		{
			action: The robot will drive distance specified by the first argument in the speed specified by the second argument
			argument explanation: 
				1st argument: Unit is meters. No range restriction
				2nd argument: ranges from 1 to 10
		}
	rotate_angle(float32 angle, float32 max_rotation_speed): 
		{
			action: The robot will rotate in radian specified by the first argument with the rotation speed specified by the second argument
			argument explanation: 
				1st argument: Unit is radians (180 degrees equal to pi radians). If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
				2nd argument: Ranges from 1 to 10.
		}
}


### Python code generated by AI:
{
	# Drive distance
	distance = 1.0
	max\_translation\_speed = 10.0
	drive\_distance(distance, max\_translation\_speed)

	# Rotate angle
	angle = 1.0
	max\_rotation\_speed = 10.0
	rotate\_angle(angle, max\_rotation\_speed)
}


### Expected Output:
{
	The robot should turn 180 degrees in place.
}


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the action requirement. Remember to write a Python code and comment out words other than the generated Python code.


### User Instruction:
{Write Python code to make the robot to rotate 180 degrees with medium speed in place}

### Library of APIs: 
{
	drive_distance(float32 distance, float32 max_translation_speed)
	rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each function appears in Library of functions
{
	drive_distance(float32 distance, float32 max_translation_speed): 
		{
			action: The robot will drive distance specified by the first argument in the speed specified by the second argument
			argument explanation: 
				1st argument: Unit is meters. No range restriction
				2nd argument: Ranges from 1 to 10
		}
	rotate_angle(float32 angle, float32 max_rotation_speed): 
		{
			action: The robot will rotate in radian specified by the first argument with the rotation speed specified by the second argument
			argument explanation: 
				1st argument: Unit is radians (180 degrees equal to pi radians). If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
				2nd argument: Ranges from 1 to 10.
		}
}


### Python code generated by AI:
{
	# Drive distance
	distance = 1.0
	max\_translation\_speed = 5.0
	drive\_distance(distance, max\_translation\_speed)

	# Rotate angle
	angle = 0.5
	max\_rotation\_speed = 3.0
	rotate\_angle(angle, max\_rotation\_speed)
}


### Expected Output:
{
	The robot should rotate 180 degrees with medium speed in place.
}


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the action requirement. Remember to write a Python code and comment out words other than the generated Python code.


### User Instruction:
{Write Python code to make the robot to rotate it 180 degrees with medium speed}

### Library of APIs: 
{
	drive_distance(float32 distance, float32 max_translation_speed)
	rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each function appears in Library of functions
{
	drive_distance(float32 distance, float32 max_translation_speed): 
		{
			action: The robot will drive distance specified by the first argument in the speed specified by the second argument
			argument explanation: 
				1st argument: Unit is meters. No range restriction
				2nd argument: Ranges from 1 to 10
		}
	rotate_angle(float32 angle, float32 max_rotation_speed): 
		{
			action: The robot will rotate in radian specified by the first argument with the rotation speed specified by the second argument
			argument explanation: 
				1st argument: Unit is radians (180 degrees equal to pi radians). If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
				2nd argument: Ranges from 1 to 10.
		}
}


### Python code generated by AI:
{
	drive\_distance(10, 5)
	rotate\_angle(3, 5)
}

{
	Explanation of the generated code:
	The first line of code, drive\_distance(10, 5), tells the robot to drive 10 meters with a maximum translation speed of 5. The second line of code, rotate\_angle(3, 5), tells the robot to rotate 3 radians with a rotation speed of 5.
}


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the action requirement. Remember to write a Python code and comment out words other than the generated Python code.


### User Instruction:
{Write Python code to make the robot to rotate it 180 degrees with medium speed}

### Library of APIs: 
{
	drive_distance(float32 distance, float32 max_translation_speed)
	rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each function appears in Library of functions
{
	drive_distance(float32 distance, float32 max_translation_speed): 
		{
			action: The robot will drive distance specified by the first argument in the speed specified by the second argument
			argument explanation: 
				1st argument: Unit is meters. No range restriction
				2nd argument: Ranges from 1 to 10
		}
	rotate_angle(float32 angle, float32 max_rotation_speed): 
		{
			action: The robot will rotate in radian specified by the first argument with the rotation speed specified by the second argument
			argument explanation: 
				1st argument: Unit is radians (3.14 radians equal to 180 degrees). If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
				2nd argument: Ranges from 1 to 10.
		}
}


### Python code generated by AI:
{
	# Drive distance
	distance = 5
	max\_translation\_speed = 5
	drive\_distance(distance, max\_translation\_speed)

	# Rotate angle
	angle = 1.57
	max\_rotation\_speed = 5
	rotate\_angle(angle, max\_rotation\_speed)
}


### Expected Output:
{
	The robot will drive 5 meters in the speed ranges from 1 to 5.
	The robot will rotate in radian 1.57 with the rotation speed ranges from 1 to 5.
}


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the action requirement. Remember to write a Python code and comment out words other than the generated Python code.


### User Instruction:
{Write Python code to make the robot to rotate it 180 degrees with medium speed}

### Library of APIs: 
{
	drive_distance(float32 distance, float32 max_translation_speed)
	rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each function appears in Library of functions
{
	drive_distance(float32 distance, float32 max_translation_speed): 
		{
			action: The robot will drive forward by the distance  specified by the first argument in the speed specified by the second argument
			argument explanation: 
				1st argument: Unit is meters. No range restriction
				2nd argument: Ranges from 1 to 10
		}
	rotate_angle(float32 angle, float32 max_rotation_speed): 
		{
			action: The robot will rotate in place in radian specified by the first argument with the rotation speed specified by the second argument
			argument explanation: 
				1st argument: Unit is radians (3.14 radians equal to 180 degrees). If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
				2nd argument: Ranges from 1 to 10.
		}
}


### Python code generated by AI:
{
	drive\_distance(10, 5)
	rotate\_angle(4.5, 3)
}

{
	The generated Python code will make the robot drive forward by 10 meters with a speed of 5, and then rotate 4.5 radians with a rotation speed of 3.}


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the action requirement. Remember to write a Python code and comment out words other than the generated Python code.


### User Instruction:
{Write Python code to make the robot to rotate it 180 degrees with medium speed}

### Library of APIs: 
{
	drive_distance(float32 distance, float32 max_translation_speed)
	rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each function appears in Library of functions
{
	drive_distance(float32 distance, float32 max_translation_speed): 
		{
			action: The robot will drive forward by the distance  specified by the first argument in the speed specified by the second argument
			argument explanation: 
				1st argument: Unit is meters. No range restriction
				2nd argument: Ranges from 1 to 10
		}
	rotate_angle(float32 angle, float32 max_rotation_speed): 
		{
			action: The robot will rotate itself in radian specified by the first argument with the rotation speed specified by the second argument
			argument explanation: 
				1st argument: Unit is radians (3.14 radians equal to 180 degrees). If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
				2nd argument: Ranges from 1 to 10.
		}
}


### Python code generated by AI:
{
	drive\_distance(10, 5)
	rotate\_angle(4.5, 3)
}

{
	The generated Python code will make the robot drive forward by 10 meters with a speed of 5, and then rotate itself by 4.5 radians with a rotation speed of 3.}


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the action requirement. Remember to write a Python code and comment out words other than the generated Python code.


### User Instruction:
{Write Python code to make the robot to rotate it 180 degrees with medium speed}

### Library of APIs: 
{
	drive_distance(float32 distance, float32 max_translation_speed)
	rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each function appears in Library of functions
{
	drive_distance(float32 distance, float32 max_translation_speed): 
		{
			action: The robot will drive forward in a length specified by the first argument in the speed specified by the second argument
			argument explanation: 
				1st argument: Unit is meters. No range restriction
				2nd argument: Ranges from 1 to 10
		}
	rotate_angle(float32 angle, float32 max_rotation_speed): 
		{
			action: The robot will rotate itself in radian specified by the first argument with the rotation speed specified by the second argument
			argument explanation: 
				1st argument: Unit is radians (3.14 radians equal to 180 degrees). If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
				2nd argument: Ranges from 1 to 10.
		}
}


### Python code generated by AI:
{
	drive\_distance(10, 5)
	rotate\_angle(4.5, 3)
}

{
	The generated Python code will make the robot drive forward for 10 meters with a speed of 5, and then rotate itself by 4.5 radians with a rotation speed of 3.}


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the action requirement. Remember to write a Python code and comment out words other than the generated Python code.


### User Instruction:
{Write Python code to make the robot to rotate 180 degrees in medium speed}

### Library of APIs: 
{
	drive_distance(float32 distance, float32 max_translation_speed)
	rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each function appears in Library of functions
{
	drive_distance(float32 distance, float32 max_translation_speed): 
		{
			action: The robot will drive forward in a length specified by the first argument in the speed specified by the second argument
			argument explanation: 
				1st argument: Unit is meters. No range restriction
				2nd argument: Ranges from 1 to 10
		}
	rotate_angle(float32 angle, float32 max_rotation_speed): 
		{
			action: The robot will rotate itself in radian specified by the first argument with the rotation speed specified by the second argument
			argument explanation: 
				1st argument: Unit is radians (3.14 radians equal to 180 degrees). If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
				2nd argument: Ranges from 1 to 10.
		}
}


### Python code generated by AI:
{
	drive\_distance(10, 5)
	rotate\_angle(3.14, 5)
}

{
	Explanation:
	The code above uses the `drive_distance` function to move the robot forward for 10 meters at a speed of 5. The `rotate_angle` function is used to rotate the robot by 3.14 radians at a rotation speed of 5. The rotation speed is limited to 5, which is the maximum rotation speed specified in the function.}


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.


### User Instruction:
{Write Python code to make the robot to rotate 180 degrees in medium speed}

### Library of APIs: 
{
	drive_distance(float32 distance, float32 max_translation_speed)
	rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
	drive_distance(float32 distance, float32 max_translation_speed): 
		{
			action: The robot will drive forward in a length specified by the first argument in the speed specified by the second argument
			argument explanation: 
				1st argument: Unit is meters. No range restriction
				2nd argument: Ranges from 1 to 10
		}
	rotate_angle(float32 angle, float32 max_rotation_speed): 
		{
			action: The robot will rotate itself in radian specified by the first argument with the rotation speed specified by the second argument
			argument explanation: 
				1st argument: Unit is radians (3.14 radians equal to 180 degrees). If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
				2nd argument: Ranges from 1 to 10.
		}
}


### Python code generated by AI:
{
	# Drive forward
	distance = 5
	max\_translation\_speed = 5
	drive\_distance(distance, max\_translation\_speed)

	# Rotate 180 degrees
	angle = 1.5708
	max\_rotation\_speed = 5
	rotate\_angle(angle, max\_rotation\_speed)
}











------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs: 
1. drive_distance(float32 distance, float32 max_translation_speed)
2. rotate_angle(float32 angle, float32 max_rotation_speed)

### Explanations to usage of each API appears in Library of APIs
1. drive_distance(float32 distance, float32 max_translation_speed): 
	{
		action: The robot will drive forward in a length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1 to 10
	}
2. rotate_angle(float32 angle, float32 max_rotation_speed): 
	{
		action: The robot will rotate itself in radian specified by the first argument with the rotation speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians (3.14 radians equal to 180 degrees). If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1 to 10.
	}

### User instruction
{Write Python code to make the robot to rotate 180 degrees in medium speed}

### Python code generated by AI:
```python
import math

# Drive distance
distance = 10
max_translation_speed = 5

# Rotate angle
angle = math.pi/2
max_rotation_speed = 3

# Drive distance
drive_distance(distance, max_translation_speed)

# Rotate angle
rotate_angle(angle, max_rotation_speed)
```


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs: 
1. drive_distance(float32 distance, float32 max_translation_speed)
2. rotate_angle(float32 angle, float32 max_rotation_speed)

### Explanations to usage of each API appears in Library of APIs
1. drive_distance(float32 distance, float32 max_translation_speed): 
	{
		action: The robot will drive forward in a length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1 to 10
	}
2. rotate_angle(float32 angle, float32 max_rotation_speed): 
	{
		action: The robot will rotate itself in radian specified by the first argument with the rotation speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians (3.14 radians equal to 180 degrees). If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1 to 10.
	}

### User instruction
{Write Python code to make the robot to rotate 180 degrees in medium speed}

### Python code generated by AI:
```python
import math

# Drive distance
distance = 10
max_translation_speed = 5

# Rotate angle
angle = math.pi/2
max_rotation_speed = 3

# Drive distance
drive_distance(distance, max_translation_speed)

# Rotate angle
rotate_angle(angle, max_rotation_speed)
```


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs: 
1. drive_distance(float32 distance, float32 max_translation_speed)
2. rotate_angle(float32 angle, float32 max_rotation_speed)

### Explanations to usage of each API appears in Library of APIs
1. drive_distance(float32 distance, float32 max_translation_speed): 
	{
		action: The robot will drive forward in a length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1 to 10
	}
2. rotate_angle(float32 angle, float32 max_rotation_speed): 
	{
		action: The robot will rotate itself in radian specified by the first argument with the rotation speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians (2pi radians equal to 180 degrees). If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1 to 10.
	}

### User instruction
{Write Python code to make the robot to rotate 180 degrees in medium speed}

### Python code generated by AI:
```python
import math

# Drive distance
distance = 10
max_translation_speed = 5

# Rotate angle
angle = math.pi/2
max_rotation_speed = 3

# Drive distance
robot.drive_distance(distance, max_translation_speed)

# Rotate angle
robot.rotate_angle(angle, max_rotation_speed)
```


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs: 
1. drive_distance(float32 distance, float32 max_translation_speed)
2. rotate_angle(float32 angle, float32 max_rotation_speed)

### Explanations to usage of each API appears in Library of APIs
1. drive_distance(float32 distance, float32 max_translation_speed): 
	{
		action: The robot will drive forward in a length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1 to 10
	}
2. rotate_angle(float32 angle, float32 max_rotation_speed): 
	{
		action: The robot will rotate itself in radian specified by the first argument with the rotation speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians (2pi radians equal to 180 degrees). If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1 to 10.
	}

### User instruction
{Write Python code to make the robot to rotate 180 degrees in medium rotational speed}

### Python code generated by AI:
```python
import math

# Drive distance
distance = 10
max_translation_speed = 5

# Rotate angle
angle = math.pi/2
max_rotation_speed = 3

# Drive distance
robot_speed = max_translation_speed

# Rotate angle
robot_angle = math.pi/2

# Combine the two actions
action = "drive_distance"
action_args = (distance, robot_speed)

# Call the function
result = drive_distance(action, action_args)

# Rotate angle
robot_angle = math.pi/2

# Combine the two actions
action = "rotate_angle"
action_args = (robot_angle, max_rotation_speed)

# Call the function
result = rotate_angle(action, action_args)
```


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
{ 
1. drive_distance(float32 distance, float32 max_translation_speed)
2. rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
1. drive_distance(float32 distance, float32 max_translation_speed): 
	{
		action: The robot will drive forward in a length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1 to 10
	}
2. rotate_angle(float32 angle, float32 max_rotation_speed): 
	{
		action: The robot will rotate itself in radian specified by the first argument with the rotation speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians (2pi radians equal to 180 degrees). If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1 to 10.
	}
}

### User instruction
{Write Python code to make the robot to rotate 180 degrees in medium rotational speed}

### Python code generated by AI:
```python
import math

# Get the angle to rotate
angle = 1.5 * math.pi

# Get the maximum rotational speed
max_rotation_speed = 5

# Calculate the rotation speed
rotation_speed = max_rotation_speed / 2

# Rotate the robot
rotate_angle(angle, rotation_speed)
```


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
{ 
1. drive_distance(float32 distance, float32 translation_speed)
2. rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
1. drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will drive forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1 to 10
	}
2. rotate_angle(float32 angle, float32 max_rotation_speed): 
	{
		action: The robot will rotate itself in radian specified by the first argument with the rotational speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians (2pi radians equal to 180 degrees). If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1 to 10.
	}
}

### User instruction
{Write Python code to make the robot to rotate 180 degrees in medium rotational speed}

### Python code generated by AI:
```python
import math

# Drive distance
distance = 10
translation_speed = 5

# Rotate angle
angle = math.pi/2
max_rotation_speed = 5

# Calculate rotation speed
rotation_speed = max_rotation_speed * math.sin(angle * math.pi / 180)

# Rotate the robot
robot.rotate_angle(angle, rotation_speed)
```


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
{ 
1. drive_distance(float32 distance, float32 translation_speed)
2. rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
1. drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will drive forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1 to 10
	}
2. rotate_angle(float32 angle, float32 max_rotation_speed): 
	{
		action: The robot will rotate itself in radian specified by the first argument with the rotational speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1 to 10.
	}
}

### User instruction
{Write Python code to make the robot to rotate 180 degrees in medium rotational speed}

### Python code generated by AI:
```python
import math

# Drive distance
distance = 10
translation_speed = 5

# Rotate angle
angle = math.pi/2
max_rotation_speed = 5

# Calculate the distance to rotate
rotation_distance = math.sqrt((2*distance*translation_speed)**2 + (angle*max_rotation_speed)**2)

# Rotate the robot
if rotation_distance > 0:
    robot.rotate(angle, max_rotation_speed)
```


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
{ 
1. drive_distance(float32 distance, float32 translation_speed)
2. rotate_angle(float32 angle, float32 max_rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
1. drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will drive forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1 to 10
	}
2. rotate_angle(float32 angle, float32 max_rotation_speed): 
	{
		action: The robot will rotate itself in an angle specified by the first argument with the rotational speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1 to 10.
	}
}

### User instruction
{Write Python code to make the robot to rotate 180 degrees in medium rotational speed}

### Python code generated by AI:
```python
import math

# Drive distance
distance = 10
translation_speed = 5

# Rotate angle
angle = math.pi/2
max_rotation_speed = 5

# Calculate distance
distance = math.sqrt(distance**2 + (translation_speed/2)**2)

# Rotate robot
if angle > max_rotation_speed:
    angle = max_rotation_speed
if angle < -max_rotation_speed:
    angle = -max_rotation_speed

# Rotate robot
if angle > 0:
    robot.rotate_clockwise(max_rotation_speed)
elif angle < 0:
    robot.rotate_counterclockwise(max_rotation_speed)
else:
    robot.rotate(max_rotation_speed)
```


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
{ 
1. drive_distance(float32 distance, float32 translation_speed)
2. rotate_angle(float32 angle, float32 rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
1. drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will drive forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1 to 10
	}
2. rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate itself in an angle specified by the first argument with the rotational speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1 to 10.
	}
}

### User instruction
{Write Python code to make the robot to rotate 180 degrees in medium rotational speed}

### Python code generated by AI:
```python
import math

# Drive distance
distance = 10
translation_speed = 5

# Rotate angle
angle = math.pi/2
rotation_speed = 3

# Combine the two actions
action = drive_distance(distance, translation_speed) + rotate_angle(angle, rotation_speed)
```


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
{ 
1. drive_distance(float32 distance, float32 translation_speed)
2. rotate_angle(float32 angle, float32 rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
1. drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will drive forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1 to 10
	}
2. rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate itself in an angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1 to 10.
	}
}

### User instruction
{Write Python code to make the robot to rotate 180 degrees in medium rotational speed}

### Python code generated by AI:
```python
import math

# Drive distance
distance = 10
translation_speed = 5

# Rotate angle
angle = math.pi/2
rotation_speed = 3

# Combine the two actions
action = drive_distance(distance, translation_speed) + rotate_angle(angle, rotation_speed)
```


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
{ 
drive_distance(float32 distance, float32 translation_speed)
rotate_angle(float32 angle, float32 rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
1. drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will drive forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1 to 10
	}
2. rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1 to 10.
	}
}

### User instruction
{Write Python code to make the robot to rotate 180 degrees in medium rotational speed}

### Python code generated by AI:
```python
import math

# Get the angle to rotate
angle = 180

# Convert angle to radians
rotation_angle = math.radians(angle)

# Calculate the speed to rotate
rotation_speed = 5

# Drive forward to reach the desired position
drive_distance = 5

# Rotate in place to the calculated speed
rotate_angle(rotation_angle, rotation_speed)
```


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
{ 
drive_distance(float32 distance, float32 translation_speed)
rotate_angle(float32 angle, float32 rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
1. drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will drive forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1 to 10
	}
2. rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1 to 10.
	}
}

### User instruction
{Write Python code to make the robot to rotate 180 degrees in medium rotational speed}

### Python code generated by AI:
```python
import math

# Get the angle to rotate
angle = 180

# Convert angle to radians
rotation_angle = math.radians(angle)

# Calculate the speed to rotate
rotation_speed = 5

# Drive forward to reach the desired position
drive_distance = 5

# Rotate in place to the calculated speed
rotate_angle(rotation_angle, rotation_speed)
```


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
{ 
drive_distance(float32 distance, float32 translation_speed)
rotate_angle(float32 angle, float32 rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
1. drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will drive forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1 to 10
	}
2. rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1 to 10.
	}
}

### User instruction
{Write Python code to make the robot to first rotate 180 degrees in medium rotational speed, and then move forward 10 meters in lowest speed}

### Python code generated by AI:
```python
# Importing necessary libraries
import math

# Defining the function to rotate the robot
def rotate_robot(angle, rotation_speed):
    # Calculating the speed of rotation
    rotation_speed = rotation_speed * 100  # Converting from float to int
    rotation_speed = min(rotation_speed, 100)  # Limiting the speed to 100
    # Calculating the time of rotation
    time_of_rotation = rotation_speed / 100  # Converting from int to float
    # Rotating the robot
    angle = math.radians(angle)
    while angle > 0:
        angle -= 1
    while angle < 0:
        angle += 1
    # Printing the final angle
    print(angle)

# Defining the function to move the robot
def move_robot(distance, speed):
    # Calculating the speed of movement
    speed = min(speed, 10)  # Limiting the speed to 10
    # Calculating the time of movement
    time_of_movement = distance / speed
    # Moving the robot
    distance = distance * speed
    while distance > 0:
        distance -= 1
    while distance < 0:
        distance += 1
    # Printing the final distance
    print(distance)

# Calling the functions to rotate and move the robot
rotate_robot(math.pi, 50)
move_robot(10, 1)
```


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
{ 
drive_distance(float32 distance, float32 translation_speed)
rotate_angle(float32 angle, float32 rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
1. drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will drive forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1.0 to 10.0.
	}
2. rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1.0 to 10.0.
	}
}

### User instruction
{Write Python code to make the robot to first rotate 180 degrees in medium rotational speed, and then move forward 10 meters in lowest speed}

### Python code generated by AI:
```python
# Importing necessary libraries
import math

# Defining the function to rotate the robot
def rotate_robot(angle, rotation_speed):
    # Calculating the speed of rotation
    rotation_speed = rotation_speed * 100  # Converting from float to int
    rotation_speed = min(rotation_speed, 100)  # Limiting the speed to 100

    # Calculating the time of rotation
    time_of_rotation = rotation_speed / 100  # Converting from int to float

    # Rotating the robot
    current_angle = angle
    while abs(current_angle - 0) > 1e-6:
        current_angle = current_angle + math.radians(0)
        time.sleep(time_of_rotation)

    # Defining the function to move the robot
    def move_robot(distance, speed):
        # Calculating the speed of movement
        speed = speed * 100  # Converting from float to int
        speed = min(speed, 100)  # Limiting the speed to 100

        # Calculating the time of movement
        time_of_movement = distance / speed

        # Moving the robot
        current_distance = distance
        while abs(current_distance - distance) > 1e-6:
            current_distance = current_distance + speed
            time.sleep(time_of_movement)

    # Calling the functions to rotate and move the robot
    rotate_robot(0, rotation_speed)
    move_robot(10, 0)
```
Note: The above code is generated by an AI and may not be the only or the best solution to the problem.


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
1. drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will drive forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1.0 to 10.0.
	}
2. rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1.0 to 10.0.
	}
}

### User instruction
{Write Python code to make the robot to first rotate 180 degrees in medium rotational speed, and then move forward 10 meters in lowest speed}

### Python code generated by AI:
```python
# Import necessary libraries
import math

# Get user instruction
instruction = input("Enter the instruction: ")

# Parse instruction
action = instruction.split(" ")

# Get the first action
first_action = action[0]

# Get the argument of the first action
argument = action[1]

# Convert argument to float
argument = float(argument)

# Check if the argument is valid
if argument < -2.0 or argument > 2.0:
    print("Error: Invalid argument value")
    exit()

# Get the second action
second_action = action[2]

# Convert second action to float
second_action = float(second_action)

# Check if the second action is valid
if second_action < 1.0 or second_action > 10.0:
    print("Error: Invalid second action value")
    exit()

# Perform the action
if first_action == "rotate":
    # Rotate the robot
    rotation_angle = math.radians(argument)
    rotation_speed = second_action
    print("Rotating the robot by", rotation_angle, "radians in", rotation_speed, "seconds")
    # Rotate the robot
elif first_action == "drive":
    # Drive the robot
    distance = argument
    translation_speed = second_action
    print("Driving the robot forward by", distance, "meters at", translation_speed, "seconds")
else:
    print("Error: Invalid first action value")
    exit()
```
Note: The above code is generated by an AI and may not be perfect. You may need to modify it to suit your specific use case.


------------------------------------------new prompt and output------------------------------------------
The user is sending an action requirement to a robot. You are an artificial intelligent assistant that helps to make the robot move in the way as required by the user. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the function library, chooses and uses appropriate APIs but not necessarily all the APIs, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
1. drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will drive forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1.0 to 10.0.
	}
2. rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1.0 to 10.0.
	}
}

### User instruction
{Write Python code to make the robot to first rotate 180 degrees in medium rotational speed. If the rotation succeeds, move the robot forward 10 meters in lowest speed}

### Python code generated by AI:
```python
# Import necessary libraries
import math

# Get user input
distance = float(input("Enter the distance to rotate: "))
rotation_speed = float(input("Enter the rotation speed: "))
translation_speed = float(input("Enter the translation speed: "))

# Convert user input to radians
distance = math.radians(distance)
rotation_speed = math.radians(rotation_speed)
translation_speed = math.radians(translation_speed)

# Check if rotation succeeds
if rotation_speed > 2 * math.pi:
    print("Rotation failed")
else:
    # Rotate the robot
    rotate_angle(rotation_speed, rotation_speed)

    # Move the robot forward
    drive_distance(distance, translation_speed)
```
Note: The above code is generated by an AI language model and may not be perfect. Please review and modify it as per your requirements.


------------------------------------------new prompt and output------------------------------------------
The user is sending a task to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the APIs library, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
1. drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will drive forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1.0 to 10.0.
	}
2. rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1.0 to 10.0.
	}
}

### User instruction
{Write Python code to make the robot to first rotate 180 degrees in medium rotational speed. If the rotation succeeds, move the robot forward 10 meters in lowest speed}

### Python code generated by AI:
```python
import math

# Drive forward 10 meters in lowest speed
drive_distance(10.0, 0.1)

# Rotate 180 degrees in medium rotational speed
rotate_angle(math.pi, 5.0)
```


------------------------------------------new prompt and output------------------------------------------
The user is sending a task to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the APIs library, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will drive forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1.0 to 10.0.
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1.0 to 10.0.
	}
}

### User instruction
{Write Python code to make the robot to first rotate 180 degrees in medium rotational speed. If the rotation succeeds, move the robot forward 10 meters in lowest speed}

### Python code generated by AI:
```python
import math

# Drive forward 10 meters in lowest speed
drive_distance(10.0, 0.1)

# Rotate 180 degrees in medium rotational speed
rotate_angle(math.pi, 5.0)
```


------------------------------------------new prompt and output------------------------------------------
The user is sending a task to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the APIs library, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will drive forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot move forward 10 meters}

### Python code generated by AI:
drive\_distance(10.0, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending a task to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read through the APIs library, and write a Python code with the help of the APIs to finish the instruction. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will drive forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate 270 degrees}

### Python code generated by AI:
drive\_distance(10.0, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending a task to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should write a Python code to finish the instruction. Remember to choose and use appropriate APIs in APIs library to move the robot. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will drive forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate 270 degrees}

### Python code generated by AI:
drive\_distance(10.0, 5.0)
rotate\_angle(2.0 * pi, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending a task to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should write a Python code to finish the instruction. Remember to choose and use appropriate APIs in APIs library to move the robot. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate 270 degrees}

### Python code generated by AI:
drive\_distance(10.0, 5.0)
rotate\_angle(2.0 * pi, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending a task to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should write a Python code to finish the instruction. You can only use APIs in APIs library to make the robot act, so only choose necessary APIs. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate 270 degrees}

### Python code generated by AI:
drive\_distance(1.0, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending a task to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should write a Python code to finish the instruction. You can only use APIs in APIs library to make the robot act, so only choose necessary APIs. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate 270 degrees}

### Python code generated by AI:
drive\_distance(1.0, 5.0)
rotate\_angle(2.0*pi, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending a task to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should write a Python code to finish the instruction. You can only use APIs in APIs library to make the robot act, so only choose necessary APIs. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary APIs those help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate 270 degrees}

### Python code generated by AI:
drive\_distance(1.0, 5.0)
rotate\_angle(2.0*pi, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should write a Python code to finish the instruction. You can only use APIs in APIs library to make the robot act, so only choose necessary APIs. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API or APIs those help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate 270 degrees}

### Python code generated by AI:
drive\_distance(1.0, 5.0)
rotate\_angle(2.0*pi, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should write a Python code to finish the instruction. You can only use APIs in APIs library to make the robot act, so only choose necessary APIs. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate 270 degrees}

### Python code generated by AI:
drive\_distance(1.0, 5.0)
rotate\_angle(2.0*pi, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction to make robot move one step by one step. You should write a Python code to finish the instruction with the help of necessary APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate 270 degrees}

### Python code generated by AI:
drive\_distance(1.0, 5.0)
rotate\_angle(2.0*pi, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction to smaller parts to work on. You should write a Python code to finish the instruction with the help of necessary APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate 270 degrees}

### Python code generated by AI:
drive\_distance(1.0, 5.0)
rotate\_angle(2.0*pi, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate 270 degrees}

### Python code generated by AI:
drive\_distance(1.0, 5.0)
rotate\_angle(2.0*pi, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot move forward 10 meter in medium speed}

### Python code generated by AI:
drive\_distance(10.0, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot move forward in slowest speed}

### Python code generated by AI:
{
drive\_distance(1.0, 1.0)
}


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot move forward 10 meters in slowest speed}

### Python code generated by AI:
{
drive\_distance(10.0, 0.1)
}


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction. Default to be 1.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot move forward 10 meters in slowest speed}

### Python code generated by AI:
{
drive\_distance(10.0, 0.1)
}


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction. Default to be 1.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot move forward}

### Python code generated by AI:
drive\_distance(10.0, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction. Default to be 1.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot move forward 1 meter}

### Python code generated by AI:
drive\_distance(1.0, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. No range restriction. Default to be 1.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot move forward}

### Python code generated by AI:
drive\_distance(10.0, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 1.0i
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot move forward}

### Python code generated by AI:
drive\_distance(10.0, 10.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 1.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot move forward}

### Python code generated by AI:
drive\_distance(10.0, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be t.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot move forward}

### Python code generated by AI:
drive\_distance(10.0, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 5.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot move forward}

### Python code generated by AI:
drive\_distance(5.0, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 2.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot move forward}

### Python code generated by AI:
drive\_distance(2.0, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 2.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in place with angle 180 degrees}

### Python code generated by AI:
drive\_distance(2.0, 5.0)
rotate\_angle(180.0, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in place with angle 180 degrees}

### Python code generated by AI:
drive\_distance(0.0, 5.0)
rotate\_angle(180.0, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle_in_radian, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in place with angle 180 degrees}

### Python code generated by AI:
drive\_distance(0.0, 5.0)
rotate\_angle(0.0, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle_in_radian, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Conversion between radians and degrees is that pi radians equal to 90 degrees. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in place with angle 180 degrees}

### Python code generated by AI:
drive\_distance(0.0, 5.0)
rotate\_angle(0.0, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle_in_radian, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in place with angle 180 degrees}

### Python code generated by AI:
drive\_distance(0.0, 5.0)
rotate\_angle(0.0, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle_in_radian, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle 180 degrees}

### Python code generated by AI:
drive\_distance(0.0, 5.0)
rotate\_angle(180.0, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle_in_radian, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle 180 degrees}

### Python code generated by AI:
drive\_distance(0.0, 5.0)
rotate\_angle(180.0, 5.0)


------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle_in_radian, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle 180 degrees}

### Python code generated by AI:
drive\_distance(0.0, 5.0)
rotate\_angle(180.0, 5.0)Time used (unit: s): 2.166893482208252



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle_in_radian, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle 180 degrees}

### Python code generated by AI:
drive\_distance(0.0, 5.0)
rotate\_angle(180.0, 5.0)Time used (unit: s): 1.8764245510101318



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle_in_radian, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle 180 degrees}

### Python code generated by AI:
drive\_distance(0.0, 5.0)
rotate\_angle(180.0, 5.0)Time used (unit: s): 1.7233350276947021



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
rotate_angle(angle_in_radian, rotation_speed)
drive_distance(distance, translation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle 180 degrees}

### Python code generated by AI:
rotate\_angle(180, 5)Time used (unit: s): 0.9279723167419434



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
rotate_angle(angle_in_radian, rotation_speed)
drive_distance(distance, translation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle 180 degrees}

### Python code generated by AI:
rotate\_angle(180, 5)Time used (unit: s): 0.9480011463165283



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Do not call API in APIs library if you do not actually need it. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
rotate_angle(angle_in_radian, rotation_speed)
drive_distance(distance, translation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle 180 degrees}

### Python code generated by AI:
rotate\_angle(180, 5)Time used (unit: s): 0.9306666851043701



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Do not call API in APIs library if you do not actually need it. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
rotate_angle(angle_in_radian, rotation_speed)
drive_distance(distance, translation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle 180 degrees}

### Python code generated by AI:
rotate\_angle(180, 5)Time used (unit: s): 0.9531819820404053



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Do not call API in APIs library if you do not actually need it. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle_in_radian, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle 180 degrees}

### Python code generated by AI:
{
drive\_distance(0.0, 5.0)
rotate\_angle(180.0, 5.0)
}Time used (unit: s): 1.8893983364105225



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Do not call API in APIs library if you do not actually need it. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle_in_radian, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle 180 degrees}

### Python code generated by AI:
{
drive\_distance(0.0, 5.0)
rotate\_angle(180.0, 5.0)
}Time used (unit: s): 1.9200334548950195



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Do not call API in APIs library if you do not actually need it. BE INTELLIGENT, PLEASE!!!!!!! Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle_in_radian, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle 180 degrees}

### Python code generated by AI:
{
drive\_distance(0.0, 5.0)
rotate\_angle(180.0, 5.0)
}Time used (unit: s): 1.894556999206543



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated user instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Do not call API in APIs library if you do not actually need it. BE INTELLIGENT, PLEASE!!!!!!! Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle_in_radian, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle 180 degrees}

### Python code generated by AI:
{
drive\_distance(0.0, 5.0)
rotate\_angle(180.0, 5.0)
}Time used (unit: s): 1.9259343147277832



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. Each line in the APIs library represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Do not call API in APIs library if you do not actually need it. BE Do not consider the sequence of APIs appear in the library. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle_in_radian, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle 180 degrees}

### Python code generated by AI:
drive\_distance(0.0, 5.0)
rotate\_angle(0.0, 5.0)Time used (unit: s): 1.6349430084228516



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. Each line in the APIs library represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Do not call API in APIs library if you do not actually need it. BE Do not consider the sequence of APIs appear in the library. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle_in_radian, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle 180 degrees}

### Python code generated by AI:
drive\_distance(0.0, 5.0)
rotate\_angle(0.0, 5.0)Time used (unit: s): 1.6518962383270264



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. Each line in the APIs library represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Do not call API in APIs library if you do not actually need it. BE Do not consider the sequence of APIs appear in the library. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed)
rotate_angle(angle_in_radian, rotation_speed)
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle 180 degrees}

### Python code generated by AI:
drive\_distance(0.0, 5.0)
rotate\_angle(0.0, 5.0)Time used (unit: s): 1.6304059028625488



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. Each line in the APIs library represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Do not call API in APIs library if you do not actually need it. BE Do not consider the sequence of APIs appear in the library. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle 180 degrees}

### Python code generated by AI:
drive\_distance(0.0, 5.0)
rotate\_angle(180.0, 5.0)Time used (unit: s): 2.148712635040283



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a library of APIs to move the robot in certain ways. Each line in the APIs library represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs in API library. Do not call API in APIs library if you do not actually need it. BE Do not consider the sequence of APIs appear in the library. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### Library of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle 180 degrees}

### Python code generated by AI:
drive\_distance(0.0, 5.0)
rotate\_angle(180.0, 5.0)Time used (unit: s): 1.7505950927734375



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180.0, 5.0);
}Time used (unit: s): 1.2861518859863281



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180.0, 5.0);
}Time used (unit: s): 1.3195157051086426



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180.0, 5.0);
}Time used (unit: s): 1.2868871688842773



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180.0, 5.0);
}Time used (unit: s): 1.3208346366882324



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 2.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
drive\_distance(2.0, 5.0);
rotate\_angle(180.0, 5.0);
}Time used (unit: s): 1.8977863788604736



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 2.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be pi
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
drive\_distance(2.0, 5.0);
rotate\_angle(180.0, 5.0);
}Time used (unit: s): 1.9337568283081055



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180.0, 5.0);
}Time used (unit: s): 1.2826085090637207



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. Default to be 0.0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. Default to be 0
			2nd argument: Ranges from 1.0 to 10.0. Default to be 5.0
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180.0, 5.0);
}Time used (unit: s): 1.3076937198638916



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180.0, 10.0);
}Time used (unit: s): 1.3185698986053467



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180.0, 10.0);
}Time used (unit: s): 1.3440406322479248



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees with medium speed}

### Python code generated by AI:
{
drive\_distance(1.0, 5.0);
rotate\_angle(180.0, 5.0);
}Time used (unit: s): 1.8893051147460938



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in place to the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees with medium speed}

### Python code generated by AI:
{
drive\_distance(1.0, 5.0);
rotate\_angle(180.0, 5.0);
}Time used (unit: s): 1.9462039470672607



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in the radian angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180.0, 10.0);
}Time used (unit: s): 1.3220174312591553



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in the radian angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: If instruction gives degrees, convert to radians first. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180.0, 10.0);
}Time used (unit: s): 1.3415474891662598



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in the radian angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180.0, 10.0);
}Time used (unit: s): 1.3258576393127441



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in the radian angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. Conversion between radians and degrees is that 90 degrees equals to pi radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180.0, 10.0);
}Time used (unit: s): 1.378143310546875



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: To use the API, remember to convert angle unit to radians first. The robot will rotate in the radian angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
drive\_distance(1.0, 10.0);
rotate\_angle(0.0, 10.0);
}Time used (unit: s): 1.894989013671875



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: To use the API, remember to convert angle unit to radians first. The robot will rotate in the radian angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
drive\_distance(1.0, 10.0);
rotate\_angle(0.0, 10.0);
}Time used (unit: s): 1.9282217025756836



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: Remember to convert angle in the instruction to radians first. The robot will rotate in the radian angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180.0, 10.0);
}Time used (unit: s): 1.3236472606658936



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: Remember to convert angle in the instruction to radians first. The robot will rotate in the radian angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180.0, 10.0);
}Time used (unit: s): 1.3763368129730225



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		usage: Remember to convert angle in the instruction to radians to use rotate_angle.
		action: The robot will rotate in the radian angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
drive\_distance(1.0, 10.0);
rotate\_angle(180.0, 10.0);
}Time used (unit: s): 1.978776454925537



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		usage: Remember to convert angle in the instruction to radians to use rotate_angle.
		action: The robot will rotate in the radian angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
drive\_distance(1.0, 10.0);
rotate\_angle(180.0, 10.0);
}Time used (unit: s): 1.9906573295593262



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		usage: Remember to calculate angle to radians.
		action: The robot will rotate in the radian angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
drive\_distance(1.0, 10.0);
rotate\_angle(0.0, 10.0);
}Time used (unit: s): 1.890756607055664





------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		usage: Remember to calculate angle to radians.
		action: The robot will rotate in the radian angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
drive\_distance(1.0, 10.0);
rotate\_angle(0.0, 10.0);
}Time used (unit: s): 1.9048395156860352



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		usage: Remember to convert angle in degrees to radians.
		action: The robot will rotate in the radian angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180.0, 10.0);
}Time used (unit: s): 1.3286364078521729



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		usage: Remember to convert angle in degrees to radians.
		action: The robot will rotate in the radian angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180.0, 10.0);
}Time used (unit: s): 1.3285000324249268



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		usage: Remember to convert angle in degrees to angle in radians.
		action: The robot will rotate in the radian angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180.0, 10.0);
}Time used (unit: s): 1.3237462043762207



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		usage: Remember to convert angle in degrees to angle in radians.
		action: The robot will rotate in the radian angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180.0, 10.0);
}Time used (unit: s): 1.390643835067749



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Remember to convert angle in degrees to angle in radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180, 10);
}Time used (unit: s): 1.1472885608673096



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Remember to convert angle in degrees to angle in radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. 
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180, 10);
}Time used (unit: s): 1.1838529109954834



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. If we want to use drive_distance but speed is not given, default to be 1.5.
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Remember to convert angle in degrees to angle in radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. If we want to use rotate_angle but speed is not given, default to be 1.5.
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180, 10);
}Time used (unit: s): 1.1586666107177734



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. If we want to use drive_distance but speed is not given, default to be 1.5.
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Remember to convert angle in degrees to angle in radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. If we want to use rotate_angle but speed is not given, default to be 1.5.
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180, 10);
}Time used (unit: s): 1.2119972705841064



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. Default to be 1.5.
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Remember to convert angle in degrees to angle in radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. Default to be 1.5.
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
drive\_distance(1.5, 1.5);
rotate\_angle(1.5, 1.5);
}Time used (unit: s): 1.807321548461914



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0. Default to be 1.5.
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Remember to convert angle in degrees to angle in radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0. Default to be 1.5.
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
drive\_distance(1.5, 1.5);
rotate\_angle(1.5, 1.5);
}Time used (unit: s): 1.837207555770874



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0 and default value is 1.5.
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Remember to convert angle in degrees to angle in radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0 and default value is 1.5.
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
drive\_distance(1.0, 1.5);
rotate\_angle(1.5708, 1.5);
}Time used (unit: s): 1.933464527130127



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0 and default value is 1.5.
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed): 
	{
		action: The robot will rotate in the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Remember to convert angle in degrees to angle in radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0 and default value is 1.5.
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
drive\_distance(1.0, 1.5);
rotate\_angle(1.5708, 1.5);
}Time used (unit: s): 1.945969820022583



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed=1.5): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0.
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed=1.5): 
	{
		action: The robot will rotate in the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Remember to convert angle in degrees to angle in radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0.
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180, 10);
}Time used (unit: s): 1.1501004695892334



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed=1.5): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0.
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed=1.5): 
	{
		action: The robot will rotate in the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Remember to convert angle in degrees to angle in radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0.
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180, 10);
}Time used (unit: s): 1.1474299430847168



------------------------------------------new prompt and output------------------------------------------
The user is sending an instruction to a robot. The robot needs to finish the task instantaneously. You are an artificial intelligent assistant that helps generate Python code to make the robot finish the task. The user provides a list of APIs to move the robot in certain ways. Each line in the APIs list represents a separate API. The robot can only recognize the APIs the user provided. User provides explanations to these APIs. You should read, analyze, and decompose the complicated instruction. You should write a Python code to finish the instruction with the help of some APIs. Do not call API in APIs list if you do not actually need it. Do not consider the sequence of APIs appear in the list. Do not call unnecessary API. Remember to write a Python code and comment out words other than the generated Python code.

### List of APIs:
Each line represents a different API you can use in your Python code. Only choose necessary API help the robot to finish the task.
{ 
drive_distance(distance, translation_speed);
rotate_angle(angle_in_radian, rotation_speed);
}

### Explanations to usage of each API appears in Library of APIs
{
drive_distance(float32 distance, float32 translation_speed=1.5): 
	{
		action: The robot will move forward in the length specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Unit is meters. 
			2nd argument: Ranges from 1.0 to 10.0.
	}
rotate_angle(float32 angle_in_radian, float32 rotation_speed=1.5): 
	{
		action: The robot will rotate in the angle specified by the first argument in the speed specified by the second argument
		argument explanation: 
			1st argument: Remember to convert angle in degrees to angle in radians. If the angle is negative, the robot will rotate clockwise. If the angle is positive, the robot will rotate counterclockwise. Ranges from -2pi to 2pi. 
			2nd argument: Ranges from 1.0 to 10.0.
	}
}

### User instruction
{Write Python code to make the robot rotate in angle of 180 degrees}

### Python code generated by AI:
{
rotate\_angle(180, 10);
}Time used (unit: s): 1.149869441986084



